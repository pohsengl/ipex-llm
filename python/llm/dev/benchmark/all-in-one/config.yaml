repo_id:
  # - 'THUDM/chatglm2-6b'
  #- 'meta-llama/Llama-2-7b-chat-hf'
  #- "mistralai/Mistral-7B-Instruct-v0.2"
  #- "google/gemma-7b" # need transformer >=4.38
  #- "tiiuae/falcon-7b"
  #- "Qwen/Qwen1.5-4B" # need transformer >=4.37
  #- "meta-llama/Meta-Llama-3-8B-Instruct"
  # - "codellama/CodeLlama-7b-hf"
  # - "deepseek-ai/deepseek-coder-7b-instruct-v1.5"
  #- "microsoft/phi-2"

  'meta-llama/Llama-2-7b-chat-hf'
  "meta-llama/Meta-Llama-3-8B-Instruct"
  "01-ai/Yi-6B"
  "lmsys/vicuna-7b-v1.5"
  "codellama/CodeLlama-7b-hf"
  "deepseek-ai/deepseek-coder-7b-instruct-v1.5"
  "ise-uiuc/Magicoder-S-DS-6.7B"

  "google/gemma-2b"
  "google/gemma-7b"
  "google/codegemma-7b"

  "mistralai/Mistral-7B-Instruct-v0.2"
  "cognitivecomputations/dolphin-2.6-mistral-7b"

  "microsoft/phi-2"

  "Qwen/Qwen1.5-4B"

  "tiiuae/falcon-7b"

  "bigcode/starcoder2-3b"


  # - 'liuhaotian/llava-v1.5-7b' # requires a LLAVA_REPO_DIR env variables pointing to the llava dir; added only for gpu win related test_api now
local_model_hub: 'path to your local model hub'
warm_up: 1
num_trials: 3
num_beams: 1 # default to greedy search
low_bit: 'sym_int4' # default to use 'sym_int4' (i.e. symmetric int4)
batch_size: 1 # default to 1
in_out_pairs:
  - '32-32'
  - '1024-128'
test_api:
  - "transformer_int4_gpu"  # on Intel GPU
  # - "transformer_int4_fp16_gpu" # on Intel GPU, use fp16 for non-linear layer
  # - "ipex_fp16_gpu" # on Intel GPU
  # - "bigdl_fp16_gpu" # on Intel GPU
  # - "optimize_model_gpu"  # on Intel GPU
  # - "transformer_int4_gpu_win" # on Intel GPU for Windows
  # - "transformer_int4_fp16_gpu_win" # on Intel GPU for Windows, use fp16 for non-linear layer
  # - "transformer_int4_loadlowbit_gpu_win" # on Intel GPU for Windows using load_low_bit API. Please make sure you have used the save.py to save the converted low bit model
  # - "deepspeed_optimize_model_gpu" # deepspeed autotp on Intel GPU
  # - "speculative_gpu"
  # - "transformer_int4"
  # - "native_int4"
  # - "optimize_model"
  # - "pytorch_autocast_bf16"
  # - "transformer_autocast_bf16"
  # - "bigdl_ipex_bf16"
  # - "bigdl_ipex_int4"
  # - "bigdl_ipex_int8"
  # - "speculative_cpu"
  # - "deepspeed_transformer_int4_cpu" # on Intel SPR Server
cpu_embedding: False # whether put embedding to CPU
streaming: False # whether output in streaming way (only avaiable now for gpu win related test_api)
